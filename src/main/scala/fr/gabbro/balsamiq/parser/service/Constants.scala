package fr.gabbro.balsamiq.parser.service

import org.mozilla.javascript.BeanProperty
import scala.beans.BeanProperty
// IbalsamiqFreeMarker - scala program to manipulate balsamiq sketches files an generate code with FreeMarker
// Version 1.0
// Copyright (C) 2014 Georges Lipka
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of either one of the following licences:
//
// 1. The Eclipse Public License (EPL) version 1.0,
//   available at http://www.eclipse.org/legal/epl-v10.html
//
// 2. The GNU Lesser General Public License (LGPL) version 2.1 or later,
//    available at http://www.gnu.org/licenses/lgpl.txt
//
// This program is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied.
// See the individual licence texts for more details.

class Constants {
  val cstAsc = "asc"
  val cstAssets = "assets"
  val cstAttributName = "attributName"
  val cstBalsamiqFileSuffix = ".bmml"
  val cstBidirect = "bidirect"
  val cstBind = "bind"
  val cstBootstrapColOffset = "bootstrapColOffset"
  val cstBootstrapColWidth = "bootstrapColWidth"
  val cstBreadCrumbs = "com.balsamiq.mockups::BreadCrumbs"
  val cstButtonBar = "com.balsamiq.mockups::ButtonBar"
  val cstCalendar = "calendar"
  val cstCanvas = "com.balsamiq.mockups::Canvas"
  val cstCenter = "C"
  val cstCheckBox = "com.balsamiq.mockups::CheckBox"
  val cstCheckBoxGroup = "com.balsamiq.mockups::CheckBoxGroup"
  val cstCheckboxShort = "checkbox"
  val cstClassName = "className"
  val cstCode = "code"
  val cstColNumber = "colNumber"
  val cstColorPicker = "com.balsamiq.mockups::ColorPicker"
  val cstColorpicker = "colorpicker"
  val cstColumnNumber = "columnNumber"
  val cstColumns = "columns"
  val cstComboBox = "com.balsamiq.mockups::ComboBox"
  val cstCombobox = "combobox"
  val cstCommonObject = "commonObject"
  val cstCommonSection = "commonSection"
  val cstComponentBalsamiq = "com.balsamiq.mockups::Component"
  val cstConstants = "constants"
  val cstContainer = "container"
  val cstContainerIsForm = "containerIsForm"
  val cstContainerName = "containerName"
  val cstControl = "control"
  val cstControlID = "controlID"
  val cstControlName = "controlName"
  val cstControlProperties = "controlProperties"
  val cstControlTypeID = "controlTypeID"
  val cstControls = "controls"
  val cstCptString = "Cpt"
  val cstCurrentTag = "currentTag"
  val cstCustomData = "customData"
  val cstCustomID = "customID"
  val cstCustomsteps = "auchan-steps"
  val cstDatagrid = "com.balsamiq.mockups::DataGrid"
  val cstDateChooser = "com.balsamiq.mockups::DateChooser"
  val cstDesc = "desc"
  val cstDhtmlxgrid = "dhtmlxgrid"
  val cstDirectoryFile = "directoryFile"
  val cstDisabled = "disabled"
  val cstDisabledSelected = "disabledSelected"
  val cstEngineProperties = "engineProperties"
  val cstEstimatedHeightInChar = "estimatedHeightInChar"
  val cstEstimatedWidthInChar = "estimatedWidthInChar"
  val cstFalseString = "false"
  val cstFieldName = "fieldName"
  val cstFieldType = "fieldType"
  val cstFormularAction = "formularAction"
  val cstFragment = "fragment"
  val cstGenerateController = "generateController"
  val cstGeneratedFileName = "generatedFileName"
  val cstGenerationProperties = "generationProperties"
  val cstGlobalContext = "globalContext"
  val cstGroupChildrenDescriptors = "groupChildrenDescriptors"
  val cstGroupConstante = "__group__"
  val cstH = "h"
  val cstHeaderHttp = "http://"
  val cstHierarchiePere = "hierarchiePere"
  val cstHorizontal = "horizontal"
  val cstHref = "href"
  val cstHrefs = "hrefs"
  val cstHtml = "html"
  val cstIcons = "icons"
  val cstIcon = "com.balsamiq.mockups::Icon"
  val cstIconShort = "icon"
  val cstId = "id"
  val cstImage = "com.balsamiq.mockups::Image"
  val cstImg = "img"
  val cstIndex = "index"
  val cstInternalId = "internalId"
  val cstIsAnArray="isAnArray"
  val cstIsAttribute = "isAttribute"
  val cstIsAFragment = "isAFragment"
  val cstIsForm = "isForm"
  val cstIsInGroup = "isInGroup"
  val cstItems = "items"
  val cstItemsVar = "itemsVar"
  val cstJavascript = "javascript"
  val cstJavascriptFileName = "javascriptFileName"
  val cstJavascriptUseCase = "javascriptUseCase"
  val cstKey = "key"
  val cstLabel = "com.balsamiq.mockups::Label"
  val cstLeft = "L"
  val cstLink = "com.balsamiq.mockups::Link"
  val cstLinkShort = "link"
  val cstList = "list"
  val cstListHTML = "com.balsamiq.mockups::List"
  val cstLocation = "location"
  val cstLocked = "locked"
  val cstMainMockupName = "mainMockupName"
  val cstMapBinding = "mapBinding"
  val cstMarkup = "markup"
  val cstMeasuredH = "measuredH"
  val cstMeasuredW = "measuredW"
  val cstMenu = "com.balsamiq.mockups::Menu"
  val cstMockupContext = "mockupContext"
  val cstNumeric = "numeric"
  val cstNumericStepper = "com.balsamiq.mockups::NumericStepper"
  val cstOverrideString = "override"
  val cstPackageName = "packageName"
  val cstPercentageBottomBannerWithRespectToContainerHeight = "percentageBottomBannerWithRespectToContainerHeight"
  val cstPercentageHeightWithRespectToContainerHeight = "percentageHeightWithRespectToContainerHeight"
  val cstPercentageHeightWithRespectToTotalHeight = "percentageHeightWithRespectToTotalHeight"
  val cstPercentageLeftBannerWithRespectToContainerWidth = "percentageLeftBannerWithRespectToContainerWidth"
  val cstPercentageRightBannerWithRespectToContainerWidth = "percentageRightBannerWithRespectToContainerWidth"
  val cstPercentageTopBannerWithRespectToContainerHeight = "percentageTopBannerWithRespectToContainerHeight"
  val cstPercentageWidhtWithRespectToContainerWidth = "percentageWidhtWithRespectToContainerWidth"
  val cstPercentageWidthWithRespectToTotalWidth = "percentageWidthWithRespectToTotalWidth"
  val cstPositionIn12th = "positionIn12th"
  val cstPositionInContainer = "positionInContainer"
  val cstPreserveSection = "preservesection"
  val cstProjectName = "projectName"
  val cstRadio = "radio"
  val cstRadioButton = "com.balsamiq.mockups::RadioButton"
  val cstRadioButtonGroup = "com.balsamiq.mockups::RadioButtonGroup"
  val cstRadiobuttonShort = "radiobutton"
  val cstRight = "R"
  val cstRoundButton = "com.balsamiq.mockups::RoundButton"
  val cstRowNumber = "rowNumber"
  val cstSelected = "selected"
  val cstSrc = "src"
  val cstState = "state"
  val cstSuffixTemplateFreeMarkerFile = ".ftl"
  val cstSuffixDesFichiersJavaScript = ".js"
  val cstTabbar = "com.balsamiq.mockups::TabBar"
  val cstTabs = "tabs"
  val cstTabulation = "tabulation"
  val cstTagBody = "body"
  val cstTagTitle = "title"
  val cstTemplateBuildTraductionKey = "buildTraductionKey"
  val cstTemplateClass = "class"
  val cstTemplateClefDeTraduction = "clefDeTraduction"
  val cstTemplateCol = "col"
  val cstTemplateField = "field"
  val cstTemplateInstance = "instance"
  val cstTemplateJavascript = "javascriptMockup"
  val cstTemplateName = "templateName"
  val cstTemplatePackage = "package"
  val cstTemplateRow = "row"
  val cstTemplateUndefined = "undefined"
  val cstTemplatingProperties = "templatingProperties"
  val cstText = "text"
  val cstTextArea = "com.balsamiq.mockups::TextArea"
  val cstTextInput = "com.balsamiq.mockups::TextInput"
  val cstTextareaShort = "textarea"
  val cstTraitementPreserveSection = "traitementPreserveSection"
  val cstTraitementPreserveSectionAlias1 = "traitementPreserveSectionAlias1"
  val cstTraitementPreserveSectionAlias2 = "traitementPreserveSectionAlias2"
  val cstTraitementPreserveSectionAlias3 = "traitementPreserveSectionAlias3"
  val cstTraitementPreserveSectionOther = "traitementPreserveSectionOther"
  val cstTrueString = "true"
  val cstUnknown = "unknown"
  val cstUp = "up"
  val cstUrls = "urls"
  val cstUsecaseName = "usecaseName"
  val cstUtf8 = "UTF8"
  val cstUtf_8 = "UTF-8"
  val cstUtility = "utility"
  val cstValidate = "validate"
  val cstVariableBinding = "variableBinding"
  val cstVariableBindingTail = "variableBindingTail"
  val cstVariablesValidate = "variablesValidate"
  val cstVertical = "vertical"
  val cstVerticalTabbar = "com.balsamiq.mockups::VerticalTabBar"
  val cstW = "w"
  val cstWidget = "widget"
  val cstWidgetContainer = "widgetContainer"
  val cstWidgetName = "widgetName"
  val cstX = "x"
  val cstXAbsolute = "xAbsolute"
  val cstXRelative = "xRelative"
  val cstY = "y"
  val cstYAbsolute = "yAbsolute"
  val cstYRelative = "yRelative"
  val cstZ = "z"
  val cstZOrder = "zOrder"

}