package fr.gabbro.balsamiq.parser.service

import org.mozilla.javascript.BeanProperty
import scala.beans.BeanProperty
// IbalsamiqFreeMarker - scala program to manipulate balsamiq sketches files an generate code with FreeMarker
// Version 1.0
// Copyright (C) 2014 Georges Lipka
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of either one of the following licences:
//
// 1. The Eclipse Public License (EPL) version 1.0,
//   available at http://www.eclipse.org/legal/epl-v10.html
//
// 2. The GNU Lesser General Public License (LGPL) version 2.1 or later,
//    available at http://www.gnu.org/licenses/lgpl.txt
//
// This program is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied.
// See the individual licence texts for more details.

class Constants {
  val asc = "asc"
  val assets = "assets"
  val attributName = "attributName"
  val balsamiqFileSuffix = ".bmml"
  val bidirect = "bidirect"
  val bind = "bind"
  val bootstrapColOffset = "bootstrapColOffset"
  val bootstrapColWidth = "bootstrapColWidth"
  val breadCrumbs = "com.balsamiq.mockups::BreadCrumbs"
  val buttonBar = "com.balsamiq.mockups::ButtonBar"
  val calendar = "calendar"
  val canvas = "com.balsamiq.mockups::Canvas"
  val center = "C"
  val checkBox = "com.balsamiq.mockups::CheckBox"
  val checkBoxGroup = "com.balsamiq.mockups::CheckBoxGroup"
  val checkboxShort = "checkbox"
  val className = "className"
  val code = "code"
  val colNumber = "colNumber"
  val colorPicker = "com.balsamiq.mockups::ColorPicker"
  val colorpicker = "colorpicker"
  val columnNumber = "columnNumber"
  val columns = "columns"
  val comboBox = "com.balsamiq.mockups::ComboBox"
  val combobox = "combobox"
  val commonObject = "commonObject"
  val commonSection = "commonSection"
  val componentBalsamiq = "com.balsamiq.mockups::Component"
  val constants = "constants"
  val container = "container"
  val containerIsForm = "containerIsForm"
  val containerName = "containerName"
  val control = "control"
  val controlID = "controlID"
  val controlName = "controlName"
  val controlProperties = "controlProperties"
  val controlTypeID = "controlTypeID"
  val controls = "controls"
  val cptString = "Cpt"
  val currentTag = "currentTag"
  val customData = "customData"
  val customID = "customID"
  val customsteps = "auchan-steps"
  val datagrid = "com.balsamiq.mockups::DataGrid"
  val dateChooser = "com.balsamiq.mockups::DateChooser"
  val desc = "desc"
  val dhtmlxgrid = "dhtmlxgrid"
  val directoryFile = "directoryFile"
  val disabled = "disabled"
  val disabledSelected = "disabledSelected"
  val engineProperties = "engineProperties"
  val estimatedHeightInChar = "estimatedHeightInChar"
  val estimatedWidthInChar = "estimatedWidthInChar"
  val falseString = "false"
  val fieldName = "fieldName"
  val fieldType = "fieldType"
  val formularAction = "formularAction"
  val fragment = "fragment"
  val generateController = "generateController"
  val generatedFileName = "generatedFileName"
  val generationProperties = "generationProperties"
  val globalContext = "globalContext"
  val groupChildrenDescriptors = "groupChildrenDescriptors"
  val groupConstante = "__group__"
  val h = "h"
  val headerHttp = "http://"
  val hierarchiePere = "hierarchiePere"
  val horizontal = "horizontal"
  val href = "href"
  val hrefs = "hrefs"
  val html = "html"
  val icons = "icons"
  val icon = "com.balsamiq.mockups::Icon"
  val iconShort = "icon"
  val id = "id"
  val image = "com.balsamiq.mockups::Image"
  val img = "img"
  val index = "index"
  val internalId = "internalId"
  val isAttribute = "isAttribute"
  val isAFragment = "isAFragment"
  val isForm = "isForm"
  val isInGroup = "isInGroup"
  val items = "items"
  val itemsVar = "itemsVar"
  val javascript = "javascript"
  val javascriptFileName = "javascriptFileName"
  val javascriptUseCase = "javascriptUseCase"
  val key = "key"
  val label = "com.balsamiq.mockups::Label"
  val left = "L"
  val link = "com.balsamiq.mockups::Link"
  val linkShort = "link"
  val list = "list"
  val listHTML = "com.balsamiq.mockups::List"
  val location = "location"
  val locked = "locked"
  val mainMockupName = "mainMockupName"
  val mapBinding = "mapBinding"
  val markup = "markup"
  val measuredH = "measuredH"
  val measuredW = "measuredW"
  val menu = "com.balsamiq.mockups::Menu"
  val mockupContext = "mockupContext"
  val numeric = "numeric"
  val numericStepper = "com.balsamiq.mockups::NumericStepper"
  val overrideString = "override"
  val packageName = "packageName"
  val percentageBottomBannerWithRespectToContainerHeight = "percentageBottomBannerWithRespectToContainerHeight"
  val percentageHeightWithRespectToContainerHeight = "percentageHeightWithRespectToContainerHeight"
  val percentageHeightWithRespectToTotalHeight = "percentageHeightWithRespectToTotalHeight"
  val percentageLeftBannerWithRespectToContainerWidth = "percentageLeftBannerWithRespectToContainerWidth"
  val percentageRightBannerWithRespectToContainerWidth = "percentageRightBannerWithRespectToContainerWidth"
  val percentageTopBannerWithRespectToContainerHeight = "percentageTopBannerWithRespectToContainerHeight"
  val percentageWidhtWithRespectToContainerWidth = "percentageWidhtWithRespectToContainerWidth"
  val percentageWidthWithRespectToTotalWidth = "percentageWidthWithRespectToTotalWidth"
  val positionIn12th = "positionIn12th"
  val positionInContainer = "positionInContainer"
  val preserveSection = "preservesection"
  val projectName = "projectName"
  val radio = "radio"
  val radioButton = "com.balsamiq.mockups::RadioButton"
  val radioButtonGroup = "com.balsamiq.mockups::RadioButtonGroup"
  val radiobuttonShort = "radiobutton"
  val right = "R"
  val roundButton = "com.balsamiq.mockups::RoundButton"
  val rowNumber = "rowNumber"
  val selected = "selected"
  val src = "src"
  val state = "state"
  val suffixTemplateFreeMarkerFile = ".ftl"
  val suffixDesFichiersJavaScript = ".js"
  val tabbar = "com.balsamiq.mockups::TabBar"
  val tabs = "tabs"
  val tabulation = "tabulation"
  val templateBuildTraductionKey = "buildTraductionKey"
  val templateClass = "class"
  val templateClefDeTraduction = "clefDeTraduction"
  val templateCol = "col"
  val templateField = "field"
  val templateInstance = "instance"
  val templateJavascript = "javascriptMockup"
  val templateName = "templateName"
  val templatePackage = "package"
  val templateRow = "row"
  val templateUndefined = "undefined"
  val templatingProperties = "templatingProperties"
  val text = "text"
  val textArea = "com.balsamiq.mockups::TextArea"
  val textInput = "com.balsamiq.mockups::TextInput"
  val textareaShort = "textarea"
  val traitementPreserveSection = "traitementPreserveSection"
  val traitementPreserveSectionAlias1 = "traitementPreserveSectionAlias1"
  val traitementPreserveSectionAlias2 = "traitementPreserveSectionAlias2"
  val traitementPreserveSectionAlias3 = "traitementPreserveSectionAlias3"
  val traitementPreserveSectionOther = "traitementPreserveSectionOther"
  val trueString = "true"
  val unknown = "unknown"
  val up = "up"
  val urls = "urls"
  val usecaseName = "usecaseName"
  val utf8 = "UTF8"
  val utf_8 = "UTF-8"
  val utility = "utility"
  val validate = "validate"
  val variableBinding = "variableBinding"
  val variableBindingTail = "variableBindingTail"
  val variablesValidate = "variablesValidate"
  val vertical = "vertical"
  val verticalTabbar = "com.balsamiq.mockups::VerticalTabBar"
  val w = "w"
  val widget = "widget"
  val widgetContainer = "widgetContainer"
  val widgetName = "widgetName"
  val x = "x"
  val xAbsolute = "xAbsolute"
  val xRelative = "xRelative"
  val y = "y"
  val yAbsolute = "yAbsolute"
  val yRelative = "yRelative"
  val z = "z"
  val zOrder = "zOrder"

}